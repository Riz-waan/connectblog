---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { format } from 'date-fns';
import { getRelatedPosts } from '../../utils/posts';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post, relatedPosts: getRelatedPosts(post, posts) },
  }));
}

const { post, relatedPosts } = Astro.props;
const { Content } = await post.render();
---

<Layout>
  <article class="blog-post">
    <header>
      <p class="post-date">{format(post.data.pubDate, 'MMMM d, yyyy')}</p>
      <h1>{post.data.title}</h1>
      <p class="description">{post.data.description}</p>
      <div class="tags">
        {post.data.tags.map(tag => (
          <span class="tag">{tag}</span>
        ))}
      </div>
    </header>
    
    <div class="content">
      <Content />
    </div>
    
    {relatedPosts.length > 0 && (
      <aside class="related-posts">
        <h2>Related Posts</h2>
        <div class="related-posts-grid">
          {relatedPosts.map(relatedPost => (
            <a href={`/blog/${relatedPost.slug}`} class="related-post-card">
              <article>
                <p class="post-date">
                  {format(relatedPost.data.pubDate, 'MMMM d, yyyy')}
                </p>
                <h3>{relatedPost.data.title}</h3>
                <p class="description">{relatedPost.data.description}</p>
                <div class="tags">
                  {relatedPost.data.tags.map(tag => (
                    <span class="tag">{tag}</span>
                  ))}
                </div>
              </article>
            </a>
          ))}
        </div>
      </aside>
    )}
  </article>
</Layout>

<style>
  .blog-post {
    max-width: 800px;
    margin: 2rem auto;
    padding: 0 2rem;
  }

  header {
    margin-bottom: 3rem;
  }

  .post-date {
    color: var(--text-color);
    opacity: 0.7;
    margin-bottom: 0.5rem;
  }

  h1 {
    font-size: 2.5rem;
    line-height: 1.2;
    margin: 0.5rem 0;
    color: var(--text-color);
  }

  .description {
    font-size: 1.2rem;
    color: var(--text-color);
    opacity: 0.9;
    margin: 1rem 0;
  }

  .tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
    margin-top: 1rem;
  }

  .tag {
    background: var(--hover-bg);
    color: var(--text-color);
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    font-size: 0.875rem;
  }

  .content {
    color: var(--text-color);
    line-height: 1.7;
  }

  .content :global(h2) {
    font-size: 1.8rem;
    margin: 2rem 0 1rem;
    color: var(--text-color);
  }

  .content :global(p) {
    margin: 1rem 0;
  }

  .content :global(ul) {
    margin: 1rem 0;
    padding-left: 1.5rem;
  }

  .content :global(li) {
    margin: 0.5rem 0;
  }

  .content :global(img) {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
    margin: 2rem 0;
  }

  .content :global(img[style*="float"]) {
    max-width: 300px;
    margin: 0.5rem 1rem;
  }

  .content :global(.footnotes) {
    font-size: 0.9rem;
    opacity: 0.9;
  }

  .content :global(.footnotes > ol) {
    margin-top: 2rem;
  }

  .content :global(.footnotes > h2) {
    display: none;
  }

  .content :global(.footnotes a:any-link) {
    color: #4338ca;
    text-decoration: none;
  }

  :global(.dark) .content :global(.footnotes a:any-link) {
    color: #818cf8;
  }

  .content :global(sup a) {
    text-decoration: none;
    padding: 0 0.2rem;
    color: var(--text-color);
    opacity: 0.8;
    font-size: 0.8em;
  }

  .content :global(sup a::before) {
    content: '[';
  }

  .content :global(sup a::after) {
    content: ']';
  }

  .related-posts {
    margin-top: 4rem;
    padding-top: 2rem;
    border-top: 1px solid var(--border-color);
  }

  .related-posts h2 {
    font-size: 1.8rem;
    margin-bottom: 1.5rem;
    color: var(--text-color);
  }

  .related-posts-grid {
    display: grid;
    gap: 1.5rem;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  }

  .related-post-card {
    text-decoration: none;
    color: inherit;
  }

  .related-post-card article {
    background: var(--card-bg, var(--bg-color));
    border: 1px solid var(--border-color);
    padding: 1.25rem;
    border-radius: 8px;
    height: 100%;
    transition: transform 0.2s, box-shadow 0.2s;
  }

  .related-post-card:hover article {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px var(--shadow-color, rgba(0, 0, 0, 0.1));
  }

  .related-post-card h3 {
    font-size: 1.2rem;
    margin: 0.5rem 0;
    color: var(--text-color);
  }

  .related-post-card .description {
    font-size: 0.95rem;
    margin: 0.5rem 0;
    color: var(--text-color);
    opacity: 0.9;
  }

  @media (max-width: 768px) {
    h1 {
      font-size: 2rem;
    }
    
    .related-posts-grid {
      grid-template-columns: 1fr;
    }

    .description {
      font-size: 1.1rem;
    }
  }
</style>